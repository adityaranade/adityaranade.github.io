{
  "hash": "02875d0d0567791a7f1875cec53b701c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Office Room Occupancy\"\nsubtitle: \"Predicting office room occupancy using binary logistic regression model\"\nauthor: \"Aditya Ranade\"\nhighlight-style:\n            light: github\ndate: \"2025-04-19\"\ncategories: [analysis, R]\nimage: \"./occupancy.jpg\"\n---\n\n\n\n::: {style=\"text-align: justify\"}\nI found this [dataset](https://archive.ics.uci.edu/dataset/357/occupancy+detection) on UCI machine learning repository which gives the dataset for predicting the room occupancy in office using variables like temperature, humidity, light, carbon-dioxide and humidity ratio. Since the variable of interest is room occupancy, it is binary variable being occupied or not occupied. We will build a logistic regression model to predict the room occupancy using the information. First let us look at the data.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggh4x)\nlibrary(GGally)\nlibrary(pROC)\nlibrary(glmnet)\nlibrary(caret)\n\n# Get data from github repo\npath <- \"https://raw.githubusercontent.com/adityaranade/portfolio/refs/heads/main/occupancy/occupancy_data.txt\"\ndata0 <- read.table(path, sep=\",\", header = TRUE)\n\n# Data processing\nhead(data0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 date Temperature Humidity Light    CO2 HumidityRatio Occupancy\n1 2015-02-04 17:51:00       23.18  27.2720 426.0 721.25   0.004792988         1\n2 2015-02-04 17:51:59       23.15  27.2675 429.5 714.00   0.004783441         1\n3 2015-02-04 17:53:00       23.15  27.2450 426.0 713.50   0.004779464         1\n4 2015-02-04 17:54:00       23.15  27.2000 426.0 708.25   0.004771509         1\n5 2015-02-04 17:55:00       23.10  27.2000 426.0 704.50   0.004756993         1\n6 2015-02-04 17:55:59       23.10  27.2000 419.0 701.00   0.004756993         1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Variable names\ncolnames(data0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"date\"          \"Temperature\"   \"Humidity\"      \"Light\"        \n[5] \"CO2\"           \"HumidityRatio\" \"Occupancy\"    \n```\n\n\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nWe will ignore the date variable. Occupancy is the binary variable which takes value 0 if the room is not occupied and takes the value 1 if the room is occupied. The explanatory variables are temperature, humidity, light carbon dioxide (CO2) and humidity ratio which are all numerical variables. Lets take a look at the first six rows of the dataset and check if there are any missing values in the dataset.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data processing\nhead(data0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 date Temperature Humidity Light    CO2 HumidityRatio Occupancy\n1 2015-02-04 17:51:00       23.18  27.2720 426.0 721.25   0.004792988         1\n2 2015-02-04 17:51:59       23.15  27.2675 429.5 714.00   0.004783441         1\n3 2015-02-04 17:53:00       23.15  27.2450 426.0 713.50   0.004779464         1\n4 2015-02-04 17:54:00       23.15  27.2000 426.0 708.25   0.004771509         1\n5 2015-02-04 17:55:00       23.10  27.2000 426.0 704.50   0.004756993         1\n6 2015-02-04 17:55:59       23.10  27.2000 419.0 701.00   0.004756993         1\n```\n\n\n:::\n\n```{.r .cell-code}\n# change column names\ncolnames(data0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"date\"          \"Temperature\"   \"Humidity\"      \"Light\"        \n[5] \"CO2\"           \"HumidityRatio\" \"Occupancy\"    \n```\n\n\n:::\n\n```{.r .cell-code}\n# \"date\",\"Temperature\",\"Humidity\",\"Light\",\n# \"CO2\",\"HumidityRatio\",\"Occupancy\"  \n\n# Check the first 6 rows of the dataset\ndata0 |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 date Temperature Humidity Light    CO2 HumidityRatio Occupancy\n1 2015-02-04 17:51:00       23.18  27.2720 426.0 721.25   0.004792988         1\n2 2015-02-04 17:51:59       23.15  27.2675 429.5 714.00   0.004783441         1\n3 2015-02-04 17:53:00       23.15  27.2450 426.0 713.50   0.004779464         1\n4 2015-02-04 17:54:00       23.15  27.2000 426.0 708.25   0.004771509         1\n5 2015-02-04 17:55:00       23.10  27.2000 426.0 704.50   0.004756993         1\n6 2015-02-04 17:55:59       23.10  27.2000 419.0 701.00   0.004756993         1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the type of data\ndata0 |> str()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t8143 obs. of  7 variables:\n $ date         : chr  \"2015-02-04 17:51:00\" \"2015-02-04 17:51:59\" \"2015-02-04 17:53:00\" \"2015-02-04 17:54:00\" ...\n $ Temperature  : num  23.2 23.1 23.1 23.1 23.1 ...\n $ Humidity     : num  27.3 27.3 27.2 27.2 27.2 ...\n $ Light        : num  426 430 426 426 426 ...\n $ CO2          : num  721 714 714 708 704 ...\n $ HumidityRatio: num  0.00479 0.00478 0.00478 0.00477 0.00476 ...\n $ Occupancy    : int  1 1 1 1 1 1 1 1 1 1 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the rows which do not have any entries\nsum(is.na(data0)) # No NA values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nNow we will look at the correlation plot which shows the correlation between each pair of the explanatory variables.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pairs plot for correlation between every pair of correlation\nggpairs(data0[,-c(1,3,ncol(data0))]) # exclude the date and binary variable\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/EDA1-1.png){width=1920}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nHumidity and Humidity ratio has high correlation (close to 1). This is on expected lines as humidity ratio is derived from humidity. We will keep only one variable in the model. Now let us look at the distribution of the continuous variables according to occupancy variable.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data for histogram\nmelted_data <- melt(na.omit(data0[,-c(1)]), id=\"Occupancy\")\n\n# Plot the histogram of all the variables\nggplot(melted_data,aes(value))+\n  geom_histogram(aes(),bins = 30)+\n  facet_grid2(Occupancy~variable, scales=\"free\")+theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/EDA2-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nWe will keep humidity ratio and light in the model. We will build a logistic regression model.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select the variables to keep in the model\ndata <- data0 |> select(c(Light,HumidityRatio,Occupancy))\n\n# split the data into training and testing data\nseed <- 23\nset.seed(seed)\nind <- sample(floor(0.75*nrow(data)),\n              replace = FALSE)\n\n# Training dataset\ndata_train <- data[ind,]\n\n# Testing dataset\ndata_test <- data[-c(ind),]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit a logistic regression model\nmodel <- glm(Occupancy ~ ., data = data_train, family = \"binomial\") \n\n# Check the summary of the model\nmodel |> summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Occupancy ~ ., family = \"binomial\", data = data_train)\n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    -9.489534   0.573068 -16.559  < 2e-16 ***\nLight           0.022247   0.001055  21.083  < 2e-16 ***\nHumidityRatio 374.622346 141.718350   2.643  0.00821 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5882.3  on 6106  degrees of freedom\nResidual deviance: 1071.6  on 6104  degrees of freedom\nAIC: 1077.6\n\nNumber of Fisher Scoring iterations: 9\n```\n\n\n:::\n\n```{.r .cell-code}\n# Prediction probability on the testing dataset\ny_pred_prob <- predict(model, data_test, type = \"response\")\n\n# Prediction class on the testing dataset\ny_pred <- ifelse(y_pred_prob>0.5,1,0)\n\n# confusion matrix\nconf_table <- table(data_test$Occupancy,y_pred)\nconfusionMatrix(conf_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n   y_pred\n       0    1\n  0 1443    5\n  1    3  585\n                                          \n               Accuracy : 0.9961          \n                 95% CI : (0.9923, 0.9983)\n    No Information Rate : 0.7102          \n    P-Value [Acc > NIR] : <2e-16          \n                                          \n                  Kappa : 0.9904          \n                                          \n Mcnemar's Test P-Value : 0.7237          \n                                          \n            Sensitivity : 0.9979          \n            Specificity : 0.9915          \n         Pos Pred Value : 0.9965          \n         Neg Pred Value : 0.9949          \n             Prevalence : 0.7102          \n         Detection Rate : 0.7087          \n   Detection Prevalence : 0.7112          \n      Balanced Accuracy : 0.9947          \n                                          \n       'Positive' Class : 0               \n                                          \n```\n\n\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nThe misclassification is 8 out of a total of 2036 test cases. This is a good model.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Misclassification\n1 - sum(diag(conf_table)) / sum(conf_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.003929273\n```\n\n\n:::\n\n```{.r .cell-code}\n# Compute ROC curve\nroc_curve <- roc(data_test$Occupancy,as.vector(y_pred_prob))\n\n# Calculate AUC\nauc_value <- auc(roc_curve)\n\n# Plot the ROC curve\nplot(roc_curve, col = \"blue\", lwd = 3, main = \"ROC Curve\")\n\n# Add AUC to the plot\nlegend(\"bottomright\", legend = paste(\"AUC =\", round(auc_value, 3)), col = \"blue\", lwd = 3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/base_model1-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nMisclassification is just around 0.4% on the testing dataset. This is not bad. Also the ROC curve is close to perfect and Area under the curve is also close to 1. We will now try to interpret the coefficients of the model as it will give us an idea of how the explanatory variable impacts the response variable occupancy.\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}