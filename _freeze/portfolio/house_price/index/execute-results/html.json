{
  "hash": "0c60c12d93a63ffdd80ba0e5005c796c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Predictive model for house price using Gaussian Process regression\"\nsubtitle: \"Gaussian Process regression for non linear relationship to predict house price\"\nauthor: \"Aditya Ranade\"\nhighlight-style:\n            light: github\ndate: \"2025-03-03\"\ncategories: [analysis, R]\nimage: \"./house_price.jpg\"\n---\n\n\n\n::: {style=\"text-align: justify\"}\nGood houses are always in demand. However in the recent times, the price of house has increased exponentially. It will be interesting to identify the factors affecting the price of house. I found this [dataset](https://archive.ics.uci.edu/dataset/477/real+estate+valuation+data+set) on UCI machine learning repository which gives the house price per unit area and related variables.\n:::\n\n::: {style=\"text-align: justify\"}\nThe idea is to build a predictive model to predict house price per unit area based on the variables like the age of house, etc. We will look at the exploratory data analysis first and later build prediction models. First let us access and process the data through R.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the packages\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(ggh4x)\nlibrary(ggcorrplot)\nlibrary(car) # to calculate the VIF values\nlibrary(GGally) # for pairs plot using ggplot framework\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get starbucks data from github repo\npath = \"https://raw.githubusercontent.com/adityaranade/portfolio/refs/heads/main/real_estate/real_estate_valuation.csv\"\ndata0 <- read.csv(path, header = TRUE)\n\n# Data processing\n# clean the column names\ncolnames(data0) <- c(\"ID\", \"date\", \"house_age\", \"distance\", \"number_store\", \"latitude\", \"longitude\", \"price\")\n\n# Check the first 6 rows of the dataset\ndata0 |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID     date house_age   distance number_store latitude longitude price\n1  1 2012.917      32.0   84.87882           10 24.98298  121.5402  37.9\n2  2 2012.917      19.5  306.59470            9 24.98034  121.5395  42.2\n3  3 2013.583      13.3  561.98450            5 24.98746  121.5439  47.3\n4  4 2013.500      13.3  561.98450            5 24.98746  121.5439  54.8\n5  5 2012.833       5.0  390.56840            5 24.97937  121.5425  43.1\n6  6 2012.667       7.1 2175.03000            3 24.96305  121.5125  32.1\n```\n\n\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nWe will focus on the 3 variables as follows\n\n-   house_age : age of house in years.\n\n-   distance : distance to nearest MRT station in meters.\n\n-   number_store : the number of convenience stores in the living circle on foot.\n\n-   price : Price per unit area where 1 unit is 1 ping = 3.3 sq. meter\n\nLet us look at the distribution of these 3 variables\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check the rows which do not have any entries\nind.na <- sum(is.na(data0))\nind.na # No NA values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter the data\n# column house_age, distance and price\n# data <- data0 |> select(c(house_age,distance,price))\ndata <- data0[,c(\"house_age\",\"distance\",\"number_store\",\"price\")]\ndata |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  house_age   distance number_store price\n1      32.0   84.87882           10  37.9\n2      19.5  306.59470            9  42.2\n3      13.3  561.98450            5  47.3\n4      13.3  561.98450            5  54.8\n5       5.0  390.56840            5  43.1\n6       7.1 2175.03000            3  32.1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Data for histogram\nmelted_data <- melt(data)\n\n# Plot the histogram of all the variables\nggplot(melted_data,aes(value))+\n  geom_histogram(bins = 20)+\n  # geom_histogram(aes(y = after_stat(density)),bins = 20)+\n  facet_grid2(~variable, scales=\"free\")+theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/data_processing2-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nHistogram does not give much information. Let us look at the correlation plot to get an idea of how the variables are correlated with each other.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# correlation plot of all the variables\ncorr <- round(cor(data), 2)\nggcorrplot(corr)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/correlation_plot-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nhouse_age is not related to distance and number_store which is not surprising. distance variable is positively correlated with number of stores which again not surprising. However price is negatively correlated with distance to nearest MRT station as well as house age and positively correlated with number of stores in the vicinity which is again logical. Next we look at the pairs plot which will show the bivariate scatter plots as well as the correlation between each variables. Scatter plots in the last row is of interest as it shows the pairwise scatterplots where price is on the y axis and the other variables are on the x axis.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(data)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/pairplots-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nThe scatterplot of price vs. distance does not look linear but more of curved. We will focus on predicting price based on the distance variable. We will look at a simple linear regression where we will try to predict price as a function of distance.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# split the data into training and testing data\nseed <- 23\nset.seed(seed)\n\nind <- sample(floor(0.75*nrow(data)),\n              replace = FALSE)\n\n# Training dataset\ndata_train <- data[ind,]\n# Testing dataset\ndata_test <- data[-ind,]\n\n# Simple linear regression using raw data\nmodel <- lm(price ~ distance, data = data_train)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = price ~ distance, data = data_train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-35.403  -6.257  -0.951   5.565  73.478 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 45.8517132  0.7759478   59.09   <2e-16 ***\ndistance    -0.0072439  0.0004646  -15.59   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.38 on 308 degrees of freedom\nMultiple R-squared:  0.4411,\tAdjusted R-squared:  0.4393 \nF-statistic: 243.1 on 1 and 308 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code}\n# Prediction on the testing dataset\ny_pred <- predict(model, data_test)\n\n# Calculate residuals = observed - predicted\nresiduals <- (data_test$price - y_pred)\n\n# Residual vs. predicted plot\nggplot(NULL,aes(y_pred,residuals))+geom_point()+\n  labs(y = \"Residuals\", x=\"Predicted price\")+ \n  geom_hline(yintercept = 0, colour = \"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/SLR-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nThe residual plot shows a trumpet horn pattern which indicates the constant variance assumption of the model is not satisfied. Hence out model is not reliable. This is not surprising since the scatterplot indicates a curved fit rather than a linear fit.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a observed vs. predicted plot\nggplot(NULL,aes(y_pred,data_test$price))+geom_point()+\n  labs(y = \"Observed\", x=\"Predicted\")+\n  lims(x=c(0,80),y=c(0,80))+\n  geom_abline()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/SLR_checks-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate RMSE\nrmse <- (residuals)^2 |> sum() |> sqrt()\nround(rmse,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 92.69\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the assumptions of the regression model\npar(mfrow = c(2, 2))\nplot(model)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/SLR_checks-2.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nThe model is has RMSE = 92.69 and the observed vs. predicted plot has the trumpet horm pattern so it is not good model. We will now look at a Gaussian process model which can handle non linear relationships very well.\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}