{
  "hash": "1b63d04213224c82d79e0e2bdfd00cf0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Starbucks food nutritional information\"\nsubtitle: \"We all like starbucks food, but what about the nutritional value of them?\"\nauthor: \"Aditya Ranade\"\nhighlight-style:\n            light: github\ndate: \"2025-05-01\"\ncategories: [analysis]\nimage: \"./starbucks_food.jpg\"\n---\n\n\n\n::: {style=\"text-align: justify\"}\nStarbucks is one of the most valued coffee chain in the world. A lot of people like to consume the food available at starbucks. But how good are they in terms of the nutritional value?\n:::\n\n::: {style=\"text-align: justify\"}\nI found this dataset on Kaggle which gives the nutritional information about their food products. In my precious post, I built a multiple linear regression model to predict the calories in beverage based on the nutritional contents of the beverage. Now we will try to do the same for the food products. \n\nFirst, we look at the exploratory data analysis and later try some simple regression models. First let us access and process the data through R.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the packages\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(ggh4x)\nlibrary(ggcorrplot)\nlibrary(car) # to calculate the VIF values\nlibrary(GGally) # for pairs plot using ggplot framework\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get starbucks data from github repo\npath <- \"https://raw.githubusercontent.com/adityaranade/starbucks/refs/heads/main/data/starbucks-menu-nutrition-food.csv\"\ndata0 <- read.csv(path, header = TRUE)\n\n# Data processing\n# change the column names\ncolnames(data0) <- c(\"name\", \"calories\", \"fat\", \n                     \"carbs\", \"fiber\",\"protein\")\n\n# Check the first 6 rows of the dataset\ndata0 |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                    name calories fat carbs fiber protein\n1                           Chonga Bagel      300   5    50     3      12\n2                           8-Grain Roll      380   6    70     7      10\n3                       Almond Croissant      410  22    45     3      10\n4                          Apple Fritter      460  23    56     2       7\n5                       Banana Nut Bread      420  22    52     2       6\n6 Blueberry Muffin with Yogurt and Honey      380  16    53     1       6\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the type of data\ndata0 |> str()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t113 obs. of  6 variables:\n $ name    : chr  \"Chonga Bagel\" \"8-Grain Roll\" \"Almond Croissant\" \"Apple Fritter\" ...\n $ calories: int  300 380 410 460 420 380 420 240 350 320 ...\n $ fat     : num  5 6 22 23 22 16 17 12 22 16 ...\n $ carbs   : int  50 70 45 56 52 53 61 28 38 36 ...\n $ fiber   : int  3 7 3 2 2 1 2 1 0 1 ...\n $ protein : int  12 10 10 7 6 6 5 5 2 8 ...\n```\n\n\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nThe data from second column should be numeric but shows as character. So we first convert it into numeric form and also exclude the rows with missing information\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# convert the data to numeric second row onwards\ndata0$calories <- as.numeric(data0$calories)\ndata0$fat <- as.numeric(data0$fat)\ndata0$carbs <- as.numeric(data0$carbs)\ndata0$fiber <- as.numeric(data0$fiber)\ndata0$protein <- as.numeric(data0$protein)\n\n# Check the type of data again\ndata0 |> str()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t113 obs. of  6 variables:\n $ name    : chr  \"Chonga Bagel\" \"8-Grain Roll\" \"Almond Croissant\" \"Apple Fritter\" ...\n $ calories: num  300 380 410 460 420 380 420 240 350 320 ...\n $ fat     : num  5 6 22 23 22 16 17 12 22 16 ...\n $ carbs   : num  50 70 45 56 52 53 61 28 38 36 ...\n $ fiber   : num  3 7 3 2 2 1 2 1 0 1 ...\n $ protein : num  12 10 10 7 6 6 5 5 2 8 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the rows which do not have any entries\nind.na <- which(is.na(data0[,2]))\nlength(ind.na) # 0 NA values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\ndata <- data0\n```\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nNow that we have the data ready, let us look at the histogram each of the variables namely calories, fat, carbs, fiber, protein and sodium\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data for histogram\nmelted_data <- melt(data, id.vars=\"name\")\n\n# Plot the histogram of all the variables\nggplot(melted_data,aes(value))+\n  geom_histogram(bins = 20)+\n  facet_grid2(~variable, scales=\"free\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/EDA-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nHistogram does not give much information. Let us look at the correlation plot to get an idea of how the variables are correlated with each other.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# correlation plot of all the variables\ncorr <- round(cor(data[,-1]), 1)\np.mat <- cor_pmat(mtcars) # correlation p-value\n# Barring the no significant coefficient\nggcorrplot(corr, hc.order = TRUE,\n           type = \"lower\", p.mat = p.mat)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/correlation_plot-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# All positive correlation\n```\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nAll the variables are positively correlated (which indicates when one variable increases, the other variable will increase as well. ) which is not a surprising. Most important part is the correlation of calories with all the other variables are considerably high. Next we look at the pairs plot which will show the bivariate scatter plots as well as the correlation between each variables.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(data,columns = 2:ncol(data),\n        lower = list(continuous = \"smooth\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/pairplots-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nMost of the bivariate scatter plots indicate a linear relationship between the variables. The most important result according to us is the relationship between calories with all the other variables. We can now use the dataset for predictions where we try to predict the calories based on the fat, carb, fiber and protein content using multiple linear regression.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# split the data into training and testing data\nseed <- 23\nset.seed(seed)\n\nind <- sample(floor(0.8*nrow(data)),\n              replace = FALSE)\n\n# Training dataset\ndata_train <- data[ind,-1]\n# Testing dataset\ndata_test <- data[-ind,-1]\n\n# Multiple linear regression using raw data\nmodel <- lm(calories ~ fat + carbs + fiber + protein , data = data_train)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = calories ~ fat + carbs + fiber + protein, data = data_train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-20.675  -4.029  -0.109   3.102  27.055 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.14909    2.73597   0.054   0.9567    \nfat          8.80325    0.10889  80.842   <2e-16 ***\ncarbs        4.01725    0.06185  64.955   <2e-16 ***\nfiber       -0.90654    0.46687  -1.942   0.0555 .  \nprotein      4.16692    0.14242  29.258   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.6 on 85 degrees of freedom\nMultiple R-squared:  0.9962,\tAdjusted R-squared:  0.996 \nF-statistic:  5508 on 4 and 85 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code}\n# Prediction on the testing dataset\ny_pred <- predict(model, data_test)\n\n# Create a observed vs. predicted plot\nggplot(NULL,aes(y_pred,data_test$calories))+geom_point()+\n  labs(y = \"Observed\", x=\"Predicted\")+geom_abline()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/MLR_raw-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate RMSE\nrmse <- (y_pred-data_test$calories)^2 |> sum() |> sqrt()\nrmse\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 70.16698\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the variance inflation factor\nvif_values <- vif(model)\nvif_values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     fat    carbs    fiber  protein \n1.237161 1.298276 1.880520 1.762035 \n```\n\n\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nThe model is decent with RMSE 70.17 and the observed vs. predicted plot also looks decent with all the points just around the line. The variation inflation factor (VIF) is also below 2 for all the variables. We will look at the residual plots to check if all the assumptions of multiple linear regression are satisfied.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check the assumptions of the regression model\npar(mfrow = c(2, 2))\nplot(model)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/assumption-1.png){width=672}\n:::\n:::\n\n\n\n::: {style=\"text-align: justify\"}\nNothing in the residual plots indicate a cause of concern regarding the model.\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}